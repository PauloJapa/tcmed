<?php

namespace DoctrineORMModule\Proxy\__CG__\Tcmed\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Administradora extends \Tcmed\Entity\Administradora implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'idAdministradora', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'razaoSocial', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'fantasiaAdministradora', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'cnpj', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'createdAt', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'status', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'referencia', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'updatedAt', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'referenciaTcmed', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'contato', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'hold', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'endereco', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'holdVirtual');
        }

        return array('__isInitialized__', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'idAdministradora', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'razaoSocial', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'fantasiaAdministradora', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'cnpj', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'createdAt', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'status', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'referencia', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'updatedAt', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'referenciaTcmed', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'contato', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'hold', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'endereco', '' . "\0" . 'Tcmed\\Entity\\Administradora' . "\0" . 'holdVirtual');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Administradora $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdAdministradora()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdAdministradora();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdAdministradora', array());

        return parent::getIdAdministradora();
    }

    /**
     * {@inheritDoc}
     */
    public function getRazaoSocial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRazaoSocial', array());

        return parent::getRazaoSocial();
    }

    /**
     * {@inheritDoc}
     */
    public function getFantasiaAdministradora()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFantasiaAdministradora', array());

        return parent::getFantasiaAdministradora();
    }

    /**
     * {@inheritDoc}
     */
    public function getCnpj()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCnpj', array());

        return parent::getCnpj();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getReferencia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReferencia', array());

        return parent::getReferencia();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getReferenciaTcmed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReferenciaTcmed', array());

        return parent::getReferenciaTcmed();
    }

    /**
     * {@inheritDoc}
     */
    public function getContato()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContato', array());

        return parent::getContato();
    }

    /**
     * {@inheritDoc}
     */
    public function getHold()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHold', array());

        return parent::getHold();
    }

    /**
     * {@inheritDoc}
     */
    public function getEndereco()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndereco', array());

        return parent::getEndereco();
    }

    /**
     * {@inheritDoc}
     */
    public function getHoldVirtual()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHoldVirtual', array());

        return parent::getHoldVirtual();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($idAdministradora)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($idAdministradora));

        return parent::setId($idAdministradora);
    }

    /**
     * {@inheritDoc}
     */
    public function setIdAdministradora($idAdministradora)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdAdministradora', array($idAdministradora));

        return parent::setIdAdministradora($idAdministradora);
    }

    /**
     * {@inheritDoc}
     */
    public function setRazaoSocial($razaoSocial)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRazaoSocial', array($razaoSocial));

        return parent::setRazaoSocial($razaoSocial);
    }

    /**
     * {@inheritDoc}
     */
    public function setFantasiaAdministradora($fantasiaAdministradora)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFantasiaAdministradora', array($fantasiaAdministradora));

        return parent::setFantasiaAdministradora($fantasiaAdministradora);
    }

    /**
     * {@inheritDoc}
     */
    public function setCnpj($cnpj)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCnpj', array($cnpj));

        return parent::setCnpj($cnpj);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function setReferencia($referencia)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReferencia', array($referencia));

        return parent::setReferencia($referencia);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array());

        return parent::setUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setReferenciaTcmed($referenciaTcmed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReferenciaTcmed', array($referenciaTcmed));

        return parent::setReferenciaTcmed($referenciaTcmed);
    }

    /**
     * {@inheritDoc}
     */
    public function setContato(\Tcmed\Entity\Contato $contato)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContato', array($contato));

        return parent::setContato($contato);
    }

    /**
     * {@inheritDoc}
     */
    public function setHold(\Tcmed\Entity\Hold $hold)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHold', array($hold));

        return parent::setHold($hold);
    }

    /**
     * {@inheritDoc}
     */
    public function setEndereco(\Tcmed\Entity\Endereco $endereco)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndereco', array($endereco));

        return parent::setEndereco($endereco);
    }

    /**
     * {@inheritDoc}
     */
    public function setHoldVirtual(\Tcmed\Entity\Hold $holdVirtual)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHoldVirtual', array($holdVirtual));

        return parent::setHoldVirtual($holdVirtual);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function floatToStr($get, $dec = 2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'floatToStr', array($get, $dec));

        return parent::floatToStr($get, $dec);
    }

    /**
     * {@inheritDoc}
     */
    public function strToFloat($check)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'strToFloat', array($check));

        return parent::strToFloat($check);
    }

    /**
     * {@inheritDoc}
     */
    public function strToDate($strDateTime = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'strToDate', array($strDateTime));

        return parent::strToDate($strDateTime);
    }

    /**
     * {@inheritDoc}
     */
    public function dateToStr($date, $full = false, $obj = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'dateToStr', array($date, $full, $obj));

        return parent::dateToStr($date, $full, $obj);
    }

}
